var contentParser=function(t){"use strict";function n(t){return new Error(t)}const e={contentTypeRegex:/^([^\/\s]+\/[^\s;]+)(.*)?$/,paramsRegex:/;\s*boundary=(?:"([^"]+)"|([^;"\s]+))/i};e.contentDispositionRegex=/^\s*form-data\s*(?:;\s*(.+))?$/i,e.contentDispositionParamRegex=/([^\=\*\s]+)(\*)?\s*\=\s*(?:([^;'"\s]+\'[\w-]*\'[^;\s]+)|(?:\"([^"]*)\")|([^;\s]*))(?:\s*(?:;\s*)|$)/g;return t.type=function(t){if(!t)throw n("Invalid content-type header");const i=t.match(e.contentTypeRegex);if(!i)throw n("Invalid content-type header");const o={mime:i[1].toLowerCase()};if(0===o.mime.indexOf("multipart/")){const t=i[2];if(t){const n=t.match(e.paramsRegex);n&&(o.boundary=n[1]||n[2])}if(!o.boundary)throw n("Invalid content-type header: multipart missing boundary")}return o},t.disposition=function(t){if(!t)throw n("Missing content-disposition header");const i=t.match(e.contentDispositionRegex);if(!i)throw n("Invalid content-disposition header format");const o=i[1];if(!o)throw n("Invalid content-disposition header missing parameters");const s={};if(o.replace(e.contentDispositionParamRegex,(t,e,i,o,r,a)=>{if(i){if(!o)throw n("Invalid content-disposition header format includes invalid parameters");try{s[e]=decodeURIComponent(o.split("'")[2])}catch(t){throw n("Invalid content-disposition header format includes invalid parameters")}}else s[e]=r||a||""}),!s.name)throw n("Invalid content-disposition header missing name parameter");return s},t}({});
//# sourceMappingURL=content-parser.min.js.map
